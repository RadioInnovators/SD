////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: P.68d
//  \   \         Application: netgen
//  /   /         Filename: DDScompiler.v
// /___/   /\     Timestamp: Sun Feb 16 21:59:35 2014
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -w -sim -ofmt verilog C:/Users/Cedric/Documents/SD.git/trunk/user_sandbox/Cedric/Simulation/BPSK_controller_Modulator/ipcore_dir/tmp/_cg/DDScompiler.ngc C:/Users/Cedric/Documents/SD.git/trunk/user_sandbox/Cedric/Simulation/BPSK_controller_Modulator/ipcore_dir/tmp/_cg/DDScompiler.v 
// Device	: 6slx45csg484-2
// Input file	: C:/Users/Cedric/Documents/SD.git/trunk/user_sandbox/Cedric/Simulation/BPSK_controller_Modulator/ipcore_dir/tmp/_cg/DDScompiler.ngc
// Output file	: C:/Users/Cedric/Documents/SD.git/trunk/user_sandbox/Cedric/Simulation/BPSK_controller_Modulator/ipcore_dir/tmp/_cg/DDScompiler.v
// # of Modules	: 1
// Design Name	: DDScompiler
// Xilinx        : C:\Xilinx\14.6\ISE_DS\ISE\
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module DDScompiler (
  aclk, aclken, aresetn, m_axis_data_tvalid, m_axis_data_tdata
)/* synthesis syn_black_box syn_noprune=1 */;
  input aclk;
  input aclken;
  input aresetn;
  output m_axis_data_tvalid;
  output [15 : 0] m_axis_data_tdata;
  
  // synthesis translate_off
  
  wire \blk00000001/sig000000f5 ;
  wire \blk00000001/sig000000f4 ;
  wire \blk00000001/sig000000f3 ;
  wire \blk00000001/sig000000f2 ;
  wire \blk00000001/sig000000f1 ;
  wire \blk00000001/sig000000f0 ;
  wire \blk00000001/sig000000ef ;
  wire \blk00000001/sig000000ee ;
  wire \blk00000001/sig000000ed ;
  wire \blk00000001/sig000000ec ;
  wire \blk00000001/sig000000eb ;
  wire \blk00000001/sig000000ea ;
  wire \blk00000001/sig000000e9 ;
  wire \blk00000001/sig000000e8 ;
  wire \blk00000001/sig000000e7 ;
  wire \blk00000001/sig000000e6 ;
  wire \blk00000001/sig000000e5 ;
  wire \blk00000001/sig000000e4 ;
  wire \blk00000001/sig000000e3 ;
  wire \blk00000001/sig000000e2 ;
  wire \blk00000001/sig000000e1 ;
  wire \blk00000001/sig000000e0 ;
  wire \blk00000001/sig000000df ;
  wire \blk00000001/sig000000de ;
  wire \blk00000001/sig000000dd ;
  wire \blk00000001/sig000000dc ;
  wire \blk00000001/sig000000db ;
  wire \blk00000001/sig000000da ;
  wire \blk00000001/sig000000d9 ;
  wire \blk00000001/sig000000d8 ;
  wire \blk00000001/sig000000d7 ;
  wire \blk00000001/sig000000d6 ;
  wire \blk00000001/sig000000d5 ;
  wire \blk00000001/sig000000d4 ;
  wire \blk00000001/sig000000d3 ;
  wire \blk00000001/sig000000d2 ;
  wire \blk00000001/sig000000d1 ;
  wire \blk00000001/sig000000d0 ;
  wire \blk00000001/sig000000cf ;
  wire \blk00000001/sig000000ce ;
  wire \blk00000001/sig000000cd ;
  wire \blk00000001/sig000000cc ;
  wire \blk00000001/sig000000cb ;
  wire \blk00000001/sig000000ca ;
  wire \blk00000001/sig000000c9 ;
  wire \blk00000001/sig000000c8 ;
  wire \blk00000001/sig000000c7 ;
  wire \blk00000001/sig000000c6 ;
  wire \blk00000001/sig000000c5 ;
  wire \blk00000001/sig000000c4 ;
  wire \blk00000001/sig000000c3 ;
  wire \blk00000001/sig000000c2 ;
  wire \blk00000001/sig000000c1 ;
  wire \blk00000001/sig000000c0 ;
  wire \blk00000001/sig000000bf ;
  wire \blk00000001/sig000000be ;
  wire \blk00000001/sig000000bd ;
  wire \blk00000001/sig000000bc ;
  wire \blk00000001/sig000000bb ;
  wire \blk00000001/sig000000ba ;
  wire \blk00000001/sig000000b9 ;
  wire \blk00000001/sig000000b8 ;
  wire \blk00000001/sig000000b7 ;
  wire \blk00000001/sig000000b6 ;
  wire \blk00000001/sig000000b5 ;
  wire \blk00000001/sig000000b4 ;
  wire \blk00000001/sig000000b3 ;
  wire \blk00000001/sig000000b2 ;
  wire \blk00000001/sig000000b1 ;
  wire \blk00000001/sig000000b0 ;
  wire \blk00000001/sig000000af ;
  wire \blk00000001/sig000000ae ;
  wire \blk00000001/sig000000ad ;
  wire \blk00000001/sig000000ac ;
  wire \blk00000001/sig000000ab ;
  wire \blk00000001/sig000000aa ;
  wire \blk00000001/sig000000a9 ;
  wire \blk00000001/sig000000a8 ;
  wire \blk00000001/sig000000a7 ;
  wire \blk00000001/sig000000a6 ;
  wire \blk00000001/sig000000a5 ;
  wire \blk00000001/sig000000a4 ;
  wire \blk00000001/sig000000a3 ;
  wire \blk00000001/sig000000a2 ;
  wire \blk00000001/sig000000a1 ;
  wire \blk00000001/sig000000a0 ;
  wire \blk00000001/sig0000009f ;
  wire \blk00000001/sig0000009e ;
  wire \blk00000001/sig0000009d ;
  wire \blk00000001/sig0000009c ;
  wire \blk00000001/sig0000009b ;
  wire \blk00000001/sig0000009a ;
  wire \blk00000001/sig00000099 ;
  wire \blk00000001/sig00000098 ;
  wire \blk00000001/sig00000097 ;
  wire \blk00000001/sig00000096 ;
  wire \blk00000001/sig00000095 ;
  wire \blk00000001/sig00000094 ;
  wire \blk00000001/sig00000093 ;
  wire \blk00000001/sig00000092 ;
  wire \blk00000001/sig00000091 ;
  wire \blk00000001/sig00000090 ;
  wire \blk00000001/sig0000008f ;
  wire \blk00000001/sig0000008e ;
  wire \blk00000001/sig0000008d ;
  wire \blk00000001/sig0000008c ;
  wire \blk00000001/sig0000008b ;
  wire \blk00000001/sig0000008a ;
  wire \blk00000001/sig00000089 ;
  wire \blk00000001/sig00000088 ;
  wire \blk00000001/sig00000087 ;
  wire \blk00000001/sig00000086 ;
  wire \blk00000001/sig00000085 ;
  wire \blk00000001/sig00000084 ;
  wire \blk00000001/sig00000083 ;
  wire \blk00000001/sig00000082 ;
  wire \blk00000001/sig00000081 ;
  wire \blk00000001/sig00000080 ;
  wire \blk00000001/sig0000007f ;
  wire \blk00000001/sig0000007e ;
  wire \blk00000001/sig0000007d ;
  wire \blk00000001/sig0000007c ;
  wire \blk00000001/sig0000007b ;
  wire \blk00000001/sig0000007a ;
  wire \blk00000001/sig00000079 ;
  wire \blk00000001/sig00000078 ;
  wire \blk00000001/sig00000077 ;
  wire \blk00000001/sig00000076 ;
  wire \blk00000001/sig00000075 ;
  wire \blk00000001/sig00000074 ;
  wire \blk00000001/sig00000073 ;
  wire \blk00000001/sig00000072 ;
  wire \blk00000001/sig00000071 ;
  wire \blk00000001/sig00000070 ;
  wire \blk00000001/sig0000006f ;
  wire \blk00000001/sig0000006e ;
  wire \blk00000001/sig0000006d ;
  wire \blk00000001/sig0000006c ;
  wire \blk00000001/sig0000006b ;
  wire \blk00000001/sig0000006a ;
  wire \blk00000001/sig00000069 ;
  wire \blk00000001/sig00000068 ;
  wire \blk00000001/sig00000067 ;
  wire \blk00000001/sig00000066 ;
  wire \blk00000001/sig00000065 ;
  wire \blk00000001/sig00000064 ;
  wire \blk00000001/sig00000063 ;
  wire \blk00000001/sig00000062 ;
  wire \blk00000001/sig00000061 ;
  wire \blk00000001/sig00000060 ;
  wire \blk00000001/sig0000005f ;
  wire \blk00000001/sig0000005e ;
  wire \blk00000001/sig0000005d ;
  wire \blk00000001/sig0000005c ;
  wire \blk00000001/sig0000005b ;
  wire \blk00000001/sig0000005a ;
  wire \blk00000001/sig00000059 ;
  wire \blk00000001/sig00000058 ;
  wire \blk00000001/sig00000057 ;
  wire \blk00000001/sig00000056 ;
  wire \blk00000001/sig00000055 ;
  wire \blk00000001/sig00000054 ;
  wire \blk00000001/sig00000053 ;
  wire \blk00000001/sig00000052 ;
  wire \blk00000001/sig00000051 ;
  wire \blk00000001/sig00000050 ;
  wire \blk00000001/sig0000004f ;
  wire \blk00000001/sig0000004e ;
  wire \blk00000001/sig0000004d ;
  wire \blk00000001/sig0000004c ;
  wire \blk00000001/sig0000004b ;
  wire \blk00000001/sig0000004a ;
  wire \blk00000001/sig00000049 ;
  wire \blk00000001/sig00000048 ;
  wire \blk00000001/sig00000047 ;
  wire \blk00000001/sig00000046 ;
  wire \blk00000001/sig00000045 ;
  wire \blk00000001/sig00000044 ;
  wire \blk00000001/sig00000043 ;
  wire \blk00000001/sig00000042 ;
  wire \blk00000001/sig00000041 ;
  wire \blk00000001/sig00000040 ;
  wire \blk00000001/sig0000003f ;
  wire \blk00000001/sig0000003e ;
  wire \blk00000001/sig0000003d ;
  wire \blk00000001/sig0000003c ;
  wire \blk00000001/sig0000003b ;
  wire \blk00000001/sig0000003a ;
  wire \blk00000001/sig00000039 ;
  wire \blk00000001/sig00000038 ;
  wire \blk00000001/sig00000037 ;
  wire \blk00000001/sig00000036 ;
  wire \blk00000001/sig00000035 ;
  wire \blk00000001/sig00000034 ;
  wire \blk00000001/sig00000033 ;
  wire \blk00000001/sig00000032 ;
  wire \blk00000001/sig00000031 ;
  wire \blk00000001/sig00000030 ;
  wire \blk00000001/sig0000002f ;
  wire \blk00000001/sig0000002e ;
  wire \blk00000001/sig0000002d ;
  wire \blk00000001/sig0000002c ;
  wire \blk00000001/sig0000002b ;
  wire \blk00000001/sig0000002a ;
  wire \blk00000001/sig00000029 ;
  wire \blk00000001/sig00000028 ;
  wire \blk00000001/sig00000027 ;
  wire \blk00000001/sig00000026 ;
  wire \blk00000001/sig00000025 ;
  wire \blk00000001/sig00000024 ;
  wire \blk00000001/sig00000023 ;
  wire \blk00000001/sig00000022 ;
  wire \blk00000001/sig00000021 ;
  wire \blk00000001/sig00000020 ;
  wire \blk00000001/sig0000001f ;
  wire \blk00000001/sig0000001e ;
  wire \blk00000001/sig0000001d ;
  wire \blk00000001/sig0000001c ;
  wire \blk00000001/sig0000001b ;
  wire \blk00000001/sig0000001a ;
  wire \blk00000001/sig00000019 ;
  wire \blk00000001/sig00000018 ;
  wire \blk00000001/sig00000017 ;
  wire \blk00000001/sig00000016 ;
  wire \blk00000001/sig00000015 ;
  wire \blk00000001/sig00000014 ;
  wire \blk00000001/sig00000013 ;
  wire \blk00000001/sig00000012 ;
  wire \blk00000001/sig00000011 ;
  wire \blk00000001/blk00000022/sig0000016d ;
  wire \blk00000001/blk00000022/sig0000016c ;
  wire \blk00000001/blk00000022/sig0000016b ;
  wire \blk00000001/blk00000022/sig0000016a ;
  wire \blk00000001/blk00000022/sig00000169 ;
  wire \blk00000001/blk00000022/sig00000168 ;
  wire \blk00000001/blk00000022/sig00000167 ;
  wire \blk00000001/blk00000022/sig00000166 ;
  wire \blk00000001/blk00000022/sig00000165 ;
  wire \blk00000001/blk00000022/sig00000164 ;
  wire \blk00000001/blk00000022/sig00000163 ;
  wire \blk00000001/blk00000022/sig00000162 ;
  wire \blk00000001/blk00000022/sig00000161 ;
  wire \blk00000001/blk00000022/sig00000160 ;
  wire \blk00000001/blk00000022/sig0000015f ;
  wire \blk00000001/blk00000022/sig0000015e ;
  wire \blk00000001/blk00000022/sig0000015d ;
  wire \blk00000001/blk00000022/sig0000015c ;
  wire \blk00000001/blk00000022/sig0000015b ;
  wire \blk00000001/blk00000022/sig0000015a ;
  wire \blk00000001/blk00000022/sig00000159 ;
  wire \blk00000001/blk00000022/sig00000158 ;
  wire \blk00000001/blk00000022/sig00000157 ;
  wire \blk00000001/blk00000022/sig00000156 ;
  wire \blk00000001/blk00000022/sig00000155 ;
  wire \blk00000001/blk00000022/sig00000154 ;
  wire \blk00000001/blk00000022/sig00000153 ;
  wire \blk00000001/blk00000022/sig00000152 ;
  wire \blk00000001/blk00000022/sig00000151 ;
  wire \blk00000001/blk00000022/sig00000150 ;
  wire \blk00000001/blk00000022/sig0000014f ;
  wire \blk00000001/blk00000022/sig0000014e ;
  wire \blk00000001/blk00000022/sig0000014d ;
  wire \blk00000001/blk00000022/sig0000014c ;
  wire \blk00000001/blk00000022/sig0000014b ;
  wire \blk00000001/blk00000022/sig0000014a ;
  wire \blk00000001/blk00000022/sig00000149 ;
  wire \blk00000001/blk00000022/sig00000148 ;
  wire \blk00000001/blk00000022/sig00000147 ;
  wire \blk00000001/blk00000022/sig00000146 ;
  wire \blk00000001/blk00000022/sig00000145 ;
  wire \blk00000001/blk00000022/sig00000144 ;
  wire \blk00000001/blk00000022/sig00000143 ;
  wire \blk00000001/blk00000022/sig00000142 ;
  wire \blk00000001/blk00000022/sig00000141 ;
  wire \blk00000001/blk00000022/sig00000140 ;
  wire \blk00000001/blk00000022/sig0000013f ;
  wire \blk00000001/blk00000022/sig0000013e ;
  wire \NLW_blk00000001/blk0000010e_Q15_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010c_Q15_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIPA<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIPA<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOA<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRA<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRA<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRA<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRA<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRB<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRB<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRB<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_ADDRB<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIB<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPA<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPA<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPA<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPA<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIPB<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIPB<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIPB<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIPB<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPB<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPB<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPB<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOPB<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DOB<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk0000010b_DIA<16>_UNCONNECTED ;
  wire [11 : 11] NlwRenamedSignal_m_axis_data_tdata;
  assign
    m_axis_data_tdata[15] = NlwRenamedSignal_m_axis_data_tdata[11],
    m_axis_data_tdata[14] = NlwRenamedSignal_m_axis_data_tdata[11],
    m_axis_data_tdata[13] = NlwRenamedSignal_m_axis_data_tdata[11],
    m_axis_data_tdata[12] = NlwRenamedSignal_m_axis_data_tdata[11],
    m_axis_data_tdata[11] = NlwRenamedSignal_m_axis_data_tdata[11];
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000010f  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000f5 ),
    .Q(\blk00000001/sig000000d4 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000001/blk0000010e  (
    .A0(\blk00000001/sig00000014 ),
    .A1(\blk00000001/sig00000014 ),
    .A2(\blk00000001/sig00000014 ),
    .A3(\blk00000001/sig00000014 ),
    .CE(aclken),
    .CLK(aclk),
    .D(\blk00000001/sig000000d6 ),
    .Q(\blk00000001/sig000000f5 ),
    .Q15(\NLW_blk00000001/blk0000010e_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000010d  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000f4 ),
    .Q(\blk00000001/sig000000d3 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000001/blk0000010c  (
    .A0(\blk00000001/sig00000013 ),
    .A1(\blk00000001/sig00000014 ),
    .A2(\blk00000001/sig00000014 ),
    .A3(\blk00000001/sig00000014 ),
    .CE(aclken),
    .CLK(aclk),
    .D(\blk00000001/sig000000d5 ),
    .Q(\blk00000001/sig000000f4 ),
    .Q15(\NLW_blk00000001/blk0000010c_Q15_UNCONNECTED )
  );
  RAMB16BWER #(
    .INIT_00 ( 256'h0031002E002A002700240021001E001B001800140011000E000B000800050002 ),
    .INIT_01 ( 256'h00630060005D0059005600530050004D004A004700430040003D003A00370034 ),
    .INIT_02 ( 256'h00950092008F008C008800850082007F007C007900760072006F006C00690066 ),
    .INIT_03 ( 256'h00C700C400C100BE00BA00B700B400B100AE00AB00A800A500A1009E009B0098 ),
    .INIT_04 ( 256'h00F900F600F300F000EC00E900E600E300E000DD00DA00D700D300D000CD00CA ),
    .INIT_05 ( 256'h012B012801240121011E011B011801150112010F010C01080105010200FF00FC ),
    .INIT_06 ( 256'h015C0159015601530150014D014A014701430140013D013A013701340131012E ),
    .INIT_07 ( 256'h018E018B018701840181017E017B017801750172016F016C016901660162015F ),
    .INIT_08 ( 256'h01BF01BC01B901B601B201AF01AC01A901A601A301A0019D019A019701940191 ),
    .INIT_09 ( 256'h01F001ED01EA01E601E301E001DD01DA01D701D401D101CE01CB01C801C501C2 ),
    .INIT_0A ( 256'h0220021D021A021702140211020E020B02080205020201FF01FC01F901F601F3 ),
    .INIT_0B ( 256'h0250024D024A024702440241023E023B023802350232022F022C022902260223 ),
    .INIT_0C ( 256'h0280027D027A027702740271026E026B026802650262025F025C025902560253 ),
    .INIT_0D ( 256'h02B002AD02AA02A702A402A1029E029B029802950292028F028C028902860283 ),
    .INIT_0E ( 256'h02DF02DC02D902D602D302D002CD02CA02C702C402C202BF02BC02B902B602B3 ),
    .INIT_0F ( 256'h030E030B03080305030202FF02FC02F902F602F302F002EE02EB02E802E502E2 ),
    .INIT_10 ( 256'h033C0339033603330330032D032A032803250322031F031C0319031603130310 ),
    .INIT_11 ( 256'h0369036703640361035E035B0358035503530350034D034A034703440341033F ),
    .INIT_12 ( 256'h039703940391038E038B0388038603830380037D037A037803750372036F036C ),
    .INIT_13 ( 256'h03C303C003BE03BB03B803B503B203B003AD03AA03A703A403A2039F039C0399 ),
    .INIT_14 ( 256'h03EF03EC03EA03E703E403E103DF03DC03D903D603D403D103CE03CB03C903C6 ),
    .INIT_15 ( 256'h041B0418041504120410040D040A04080405040203FF03FD03FA03F703F503F2 ),
    .INIT_16 ( 256'h044504430440043D043B0438043504330430042D042B0428042504230420041D ),
    .INIT_17 ( 256'h046F046D046A0468046504620460045D045A0458045504530450044D044B0448 ),
    .INIT_18 ( 256'h0499049604940491048F048C0489048704840482047F047C047A047704750472 ),
    .INIT_19 ( 256'h04C204BF04BC04BA04B704B504B204B004AD04AB04A804A604A304A1049E049B ),
    .INIT_1A ( 256'h04EA04E704E504E204E004DD04DB04D804D604D304D104CE04CC04C904C704C4 ),
    .INIT_1B ( 256'h0511050E050C0509050705050502050004FD04FB04F804F604F304F104EE04EC ),
    .INIT_1C ( 256'h0537053505320530052E052B0529052605240522051F051D051A051805160513 ),
    .INIT_1D ( 256'h055D055B0558055605540551054F054C054A0548054505430541053E053C053A ),
    .INIT_1E ( 256'h0582057F057D057B0579057605740572056F056D056B0568056605640561055F ),
    .INIT_1F ( 256'h05A605A305A1059F059D059A0598059605940592058F058D058B058805860584 ),
    .INIT_20 ( 256'h05C905C705C405C205C005BE05BC05B905B705B505B305B105AE05AC05AA05A8 ),
    .INIT_21 ( 256'h05EB05E905E705E505E205E005DE05DC05DA05D805D605D405D105CF05CD05CB ),
    .INIT_22 ( 256'h060C060A0608060606040602060005FE05FC05FA05F805F505F305F105EF05ED ),
    .INIT_23 ( 256'h062D062B06290627062506230621061F061D061A06180616061406120610060E ),
    .INIT_24 ( 256'h064C064A06480646064406420640063E063C063A06380637063506330631062F ),
    .INIT_25 ( 256'h066A06690667066506630661065F065D065B065906580656065406520650064E ),
    .INIT_26 ( 256'h06880686068406820681067F067D067B067906770676067406720670066E066C ),
    .INIT_27 ( 256'h06A406A306A1069F069D069C069A06980696069406930691068F068D068B068A ),
    .INIT_28 ( 256'h06C006BE06BC06BB06B906B706B606B406B206B006AF06AD06AB06AA06A806A6 ),
    .INIT_29 ( 256'h06DA06D806D706D506D406D206D006CF06CD06CB06CA06C806C606C506C306C1 ),
    .INIT_2A ( 256'h06F306F206F006EF06ED06EC06EA06E806E706E506E406E206E106DF06DD06DC ),
    .INIT_2B ( 256'h070C070A070907070706070407030701070006FE06FD06FB06FA06F806F706F5 ),
    .INIT_2C ( 256'h072307210720071F071D071C071A0719071707160714071307120710070F070D ),
    .INIT_2D ( 256'h0739073807360735073307320731072F072E072D072B072A0728072707260724 ),
    .INIT_2E ( 256'h074E074D074B074A07490747074607450744074207410740073E073D073C073A ),
    .INIT_2F ( 256'h07620760075F075E075D075C075A07590758075707550754075307520750074F ),
    .INIT_30 ( 256'h07740773077207710770076F076D076C076B076A076907680766076507640763 ),
    .INIT_31 ( 256'h078607850784078307820781077F077E077D077C077B077A0779077807770775 ),
    .INIT_32 ( 256'h0796079507940793079207910790078F078E078D078C078B078A078907880787 ),
    .INIT_33 ( 256'h07A507A507A407A307A207A107A0079F079E079D079C079B079A079907980797 ),
    .INIT_34 ( 256'h07B307B307B207B107B007AF07AE07AD07AD07AC07AB07AA07A907A807A707A6 ),
    .INIT_35 ( 256'h07C007C007BF07BE07BD07BC07BC07BB07BA07B907B807B807B707B607B507B4 ),
    .INIT_36 ( 256'h07CC07CB07CB07CA07C907C807C807C707C607C607C507C407C307C307C207C1 ),
    .INIT_37 ( 256'h07D607D607D507D507D407D307D307D207D107D107D007CF07CF07CE07CD07CD ),
    .INIT_38 ( 256'h07E007DF07DF07DE07DD07DD07DC07DC07DB07DB07DA07D907D907D807D807D7 ),
    .INIT_39 ( 256'h07E807E707E707E607E607E507E507E407E407E307E307E207E207E107E107E0 ),
    .INIT_3A ( 256'h07EE07EE07EE07ED07ED07EC07EC07EC07EB07EB07EA07EA07E907E907E907E8 ),
    .INIT_3B ( 256'h07F407F407F307F307F307F207F207F207F107F107F107F007F007F007EF07EF ),
    .INIT_3C ( 256'h07F807F807F807F807F707F707F707F707F607F607F607F507F507F507F507F4 ),
    .INIT_3D ( 256'h07FB07FB07FB07FB07FB07FB07FA07FA07FA07FA07FA07F907F907F907F907F9 ),
    .INIT_3E ( 256'h07FD07FD07FD07FD07FD07FD07FD07FD07FD07FC07FC07FC07FC07FC07FC07FC ),
    .INIT_3F ( 256'h07FE07FE07FE07FE07FE07FE07FE07FE07FE07FE07FE07FE07FE07FE07FD07FD ),
    .INIT_A ( 36'h000000000 ),
    .INIT_B ( 36'h000000000 ),
    .WRITE_MODE_A ( "WRITE_FIRST" ),
    .WRITE_MODE_B ( "WRITE_FIRST" ),
    .DATA_WIDTH_A ( 18 ),
    .DATA_WIDTH_B ( 18 ),
    .DOA_REG ( 1 ),
    .DOB_REG ( 1 ),
    .EN_RSTRAM_A ( "TRUE" ),
    .EN_RSTRAM_B ( "TRUE" ),
    .INITP_00 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_01 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_02 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_03 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_04 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_05 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_06 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .INITP_07 ( 256'h0000000000000000000000000000000000000000000000000000000000000000 ),
    .RST_PRIORITY_A ( "CE" ),
    .RST_PRIORITY_B ( "CE" ),
    .RSTTYPE ( "SYNC" ),
    .SRVAL_A ( 36'h000000000 ),
    .SRVAL_B ( 36'h000000000 ),
    .SIM_COLLISION_CHECK ( "ALL" ),
    .SIM_DEVICE ( "SPARTAN6" ),
    .INIT_FILE ( "NONE" ))
  \blk00000001/blk0000010b  (
    .REGCEA(aclken),
    .CLKA(aclk),
    .ENB(aclken),
    .RSTB(\blk00000001/sig00000014 ),
    .CLKB(aclk),
    .REGCEB(aclken),
    .RSTA(\blk00000001/sig00000014 ),
    .ENA(aclken),
    .DIPA({\NLW_blk00000001/blk0000010b_DIPA<3>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIPA<2>_UNCONNECTED , \blk00000001/sig00000014 , 
\blk00000001/sig00000014 }),
    .WEA({\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 }),
    .DOA({\NLW_blk00000001/blk0000010b_DOA<31>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<30>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<29>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<28>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<27>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<26>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<25>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<24>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<23>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<22>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<21>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<20>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<19>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<18>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<17>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<16>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<15>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<14>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<13>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOA<12>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOA<11>_UNCONNECTED , \blk00000001/sig000000bc , \blk00000001/sig000000bb , \blk00000001/sig000000ba , 
\blk00000001/sig000000b9 , \blk00000001/sig000000b8 , \blk00000001/sig000000b7 , \blk00000001/sig000000b6 , \blk00000001/sig000000b5 , 
\blk00000001/sig000000b4 , \blk00000001/sig000000b3 , \blk00000001/sig000000b2 }),
    .ADDRA({\blk00000001/sig000000a6 , \blk00000001/sig000000a5 , \blk00000001/sig000000a4 , \blk00000001/sig000000a3 , \blk00000001/sig000000a2 , 
\blk00000001/sig000000a1 , \blk00000001/sig000000a0 , \blk00000001/sig0000009f , \blk00000001/sig0000009e , \blk00000001/sig0000009d , 
\NLW_blk00000001/blk0000010b_ADDRA<3>_UNCONNECTED , \NLW_blk00000001/blk0000010b_ADDRA<2>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_ADDRA<1>_UNCONNECTED , \NLW_blk00000001/blk0000010b_ADDRA<0>_UNCONNECTED }),
    .ADDRB({\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , 
\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , 
\NLW_blk00000001/blk0000010b_ADDRB<3>_UNCONNECTED , \NLW_blk00000001/blk0000010b_ADDRB<2>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_ADDRB<1>_UNCONNECTED , \NLW_blk00000001/blk0000010b_ADDRB<0>_UNCONNECTED }),
    .DIB({\NLW_blk00000001/blk0000010b_DIB<31>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<30>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<29>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<28>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<27>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<26>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<25>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<24>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<23>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<22>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<21>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<20>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<19>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<18>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<17>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<16>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<15>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<14>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<13>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<12>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIB<11>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<10>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<9>_UNCONNECTED 
, \NLW_blk00000001/blk0000010b_DIB<8>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<7>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<6>_UNCONNECTED 
, \NLW_blk00000001/blk0000010b_DIB<5>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<4>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<3>_UNCONNECTED 
, \NLW_blk00000001/blk0000010b_DIB<2>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<1>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIB<0>_UNCONNECTED 
}),
    .DOPA({\NLW_blk00000001/blk0000010b_DOPA<3>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOPA<2>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOPA<1>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOPA<0>_UNCONNECTED }),
    .DIPB({\NLW_blk00000001/blk0000010b_DIPB<3>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIPB<2>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIPB<1>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIPB<0>_UNCONNECTED }),
    .DOPB({\NLW_blk00000001/blk0000010b_DOPB<3>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOPB<2>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOPB<1>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOPB<0>_UNCONNECTED }),
    .DOB({\NLW_blk00000001/blk0000010b_DOB<31>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<30>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<29>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<28>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<27>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<26>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<25>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<24>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<23>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<22>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<21>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<20>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<19>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<18>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<17>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<16>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<15>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<14>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<13>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DOB<12>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DOB<11>_UNCONNECTED , \blk00000001/sig000000b1 , \blk00000001/sig000000b0 , \blk00000001/sig000000af , 
\blk00000001/sig000000ae , \blk00000001/sig000000ad , \blk00000001/sig000000ac , \blk00000001/sig000000ab , \blk00000001/sig000000aa , 
\blk00000001/sig000000a9 , \blk00000001/sig000000a8 , \blk00000001/sig000000a7 }),
    .WEB({\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 }),
    .DIA({\NLW_blk00000001/blk0000010b_DIA<31>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<30>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<29>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<28>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<27>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<26>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<25>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<24>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<23>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<22>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<21>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<20>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<19>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<18>_UNCONNECTED , 
\NLW_blk00000001/blk0000010b_DIA<17>_UNCONNECTED , \NLW_blk00000001/blk0000010b_DIA<16>_UNCONNECTED , \blk00000001/sig00000014 , 
\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , 
\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , 
\blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 , \blk00000001/sig00000014 })
  );
  INV   \blk00000001/blk0000010a  (
    .I(\blk00000001/sig00000015 ),
    .O(\blk00000001/sig00000018 )
  );
  INV   \blk00000001/blk00000109  (
    .I(aresetn),
    .O(\blk00000001/sig00000012 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000108  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000d4 ),
    .Q(\blk00000001/sig000000f3 )
  );
  LUT1 #(
    .INIT ( 2'h2 ))
  \blk00000001/blk00000107  (
    .I0(\blk00000001/sig000000c8 ),
    .O(\blk00000001/sig000000f2 )
  );
  LUT1 #(
    .INIT ( 2'h2 ))
  \blk00000001/blk00000106  (
    .I0(\blk00000001/sig000000bd ),
    .O(\blk00000001/sig000000f1 )
  );
  LUT1 #(
    .INIT ( 2'h2 ))
  \blk00000001/blk00000105  (
    .I0(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig000000f0 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000104  (
    .I0(\blk00000001/sig000000d3 ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig000000ef )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000103  (
    .I0(\blk00000001/sig00000032 ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig0000009c )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000102  (
    .I0(\blk00000001/sig00000031 ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig0000009b )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000101  (
    .I0(\blk00000001/sig00000030 ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig0000009a )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000100  (
    .I0(\blk00000001/sig0000002f ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000099 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000ff  (
    .I0(\blk00000001/sig0000002e ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000098 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000fe  (
    .I0(\blk00000001/sig0000002d ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000097 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000fd  (
    .I0(\blk00000001/sig0000002c ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000096 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000fc  (
    .I0(\blk00000001/sig0000002b ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000095 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000fb  (
    .I0(\blk00000001/sig0000002a ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000094 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000fa  (
    .I0(\blk00000001/sig00000029 ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/sig00000093 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f9  (
    .I0(\blk00000001/sig000000d1 ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig00000090 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f8  (
    .I0(\blk00000001/sig000000d0 ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig0000008f )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f7  (
    .I0(\blk00000001/sig000000cf ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig0000008e )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f6  (
    .I0(\blk00000001/sig000000ce ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig0000008d )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f5  (
    .I0(\blk00000001/sig000000cd ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig0000008c )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f4  (
    .I0(\blk00000001/sig000000cc ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig0000008b )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f3  (
    .I0(\blk00000001/sig000000cb ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig0000008a )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f2  (
    .I0(\blk00000001/sig000000ca ),
    .I1(\blk00000001/sig000000f3 ),
    .O(\blk00000001/sig00000089 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f1  (
    .I0(\blk00000001/sig000000c9 ),
    .I1(\blk00000001/sig000000f3 ),
    .O(\blk00000001/sig00000088 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk000000f0  (
    .I0(\blk00000001/sig000000d2 ),
    .I1(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig00000091 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000ef  (
    .I0(\blk00000001/sig000000c6 ),
    .I1(\blk00000001/sig000000d3 ),
    .I2(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig00000086 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000ee  (
    .I0(\blk00000001/sig000000c5 ),
    .I1(\blk00000001/sig000000d3 ),
    .I2(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig00000085 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000ed  (
    .I0(\blk00000001/sig000000c4 ),
    .I1(\blk00000001/sig000000d3 ),
    .I2(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig00000084 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000ec  (
    .I0(\blk00000001/sig000000c3 ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig00000083 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000eb  (
    .I0(\blk00000001/sig000000c2 ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig00000082 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000ea  (
    .I0(\blk00000001/sig000000c1 ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig00000081 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000e9  (
    .I0(\blk00000001/sig000000c0 ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig00000080 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000e8  (
    .I0(\blk00000001/sig000000bf ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig0000007f )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000e7  (
    .I0(\blk00000001/sig000000be ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig0000007e )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000e6  (
    .I0(\blk00000001/sig000000c7 ),
    .I1(\blk00000001/sig000000d3 ),
    .I2(\blk00000001/sig00000092 ),
    .O(\blk00000001/sig00000087 )
  );
  LUT3 #(
    .INIT ( 8'h96 ))
  \blk00000001/blk000000e5  (
    .I0(\blk00000001/sig000000bd ),
    .I1(\blk00000001/sig000000f3 ),
    .I2(\blk00000001/sig000000d3 ),
    .O(\blk00000001/sig0000007d )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000001/blk000000e4  (
    .I0(\blk00000001/sig0000001b ),
    .I1(\blk00000001/sig00000015 ),
    .O(\blk00000001/sig00000017 )
  );
  LUT3 #(
    .INIT ( 8'hA9 ))
  \blk00000001/blk000000e3  (
    .I0(\blk00000001/sig0000001c ),
    .I1(\blk00000001/sig00000015 ),
    .I2(\blk00000001/sig0000001b ),
    .O(\blk00000001/sig00000016 )
  );
  LUT4 #(
    .INIT ( 16'h0001 ))
  \blk00000001/blk000000e2  (
    .I0(\blk00000001/sig0000001c ),
    .I1(\blk00000001/sig0000001b ),
    .I2(\blk00000001/sig00000015 ),
    .I3(\blk00000001/sig00000011 ),
    .O(\blk00000001/sig0000001a )
  );
  LUT4 #(
    .INIT ( 16'hAAA8 ))
  \blk00000001/blk000000e1  (
    .I0(aclken),
    .I1(\blk00000001/sig0000001c ),
    .I2(\blk00000001/sig0000001b ),
    .I3(\blk00000001/sig00000015 ),
    .O(\blk00000001/sig00000019 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000e0  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000071 ),
    .Q(\blk00000001/sig000000e3 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000df  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000072 ),
    .Q(\blk00000001/sig000000e4 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000de  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000073 ),
    .Q(\blk00000001/sig000000e5 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000dd  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000074 ),
    .Q(\blk00000001/sig000000e6 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000dc  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000075 ),
    .Q(\blk00000001/sig000000e7 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000db  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000076 ),
    .Q(\blk00000001/sig000000e8 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000da  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000077 ),
    .Q(\blk00000001/sig000000e9 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d9  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000078 ),
    .Q(\blk00000001/sig000000ea )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d8  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000079 ),
    .Q(\blk00000001/sig000000eb )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d7  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000007a ),
    .Q(\blk00000001/sig000000ec )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d6  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000007b ),
    .Q(\blk00000001/sig000000ed )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d5  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000007c ),
    .Q(\blk00000001/sig000000ee )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d4  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e3 ),
    .Q(m_axis_data_tdata[0])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d3  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e4 ),
    .Q(m_axis_data_tdata[1])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d2  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e5 ),
    .Q(m_axis_data_tdata[2])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d1  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e6 ),
    .Q(m_axis_data_tdata[3])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000d0  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e7 ),
    .Q(m_axis_data_tdata[4])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000cf  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e8 ),
    .Q(m_axis_data_tdata[5])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ce  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000e9 ),
    .Q(m_axis_data_tdata[6])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000cd  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ea ),
    .Q(m_axis_data_tdata[7])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000cc  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000eb ),
    .Q(m_axis_data_tdata[8])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000cb  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ec ),
    .Q(m_axis_data_tdata[9])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ca  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ed ),
    .Q(m_axis_data_tdata[10])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c9  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ee ),
    .Q(NlwRenamedSignal_m_axis_data_tdata[11])
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c8  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000065 ),
    .Q(\blk00000001/sig000000d7 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c7  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000066 ),
    .Q(\blk00000001/sig000000d8 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c6  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000067 ),
    .Q(\blk00000001/sig000000d9 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c5  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000068 ),
    .Q(\blk00000001/sig000000da )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c4  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000069 ),
    .Q(\blk00000001/sig000000db )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c3  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000006a ),
    .Q(\blk00000001/sig000000dc )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c2  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000006b ),
    .Q(\blk00000001/sig000000dd )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c1  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000006c ),
    .Q(\blk00000001/sig000000de )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000c0  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000006d ),
    .Q(\blk00000001/sig000000df )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000bf  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000006e ),
    .Q(\blk00000001/sig000000e0 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000be  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000006f ),
    .Q(\blk00000001/sig000000e1 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000bd  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000070 ),
    .Q(\blk00000001/sig000000e2 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000bc  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b2 ),
    .Q(\blk00000001/sig000000c8 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000bb  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b3 ),
    .Q(\blk00000001/sig000000c9 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ba  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b4 ),
    .Q(\blk00000001/sig000000ca )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b9  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b5 ),
    .Q(\blk00000001/sig000000cb )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b8  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b6 ),
    .Q(\blk00000001/sig000000cc )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b7  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b7 ),
    .Q(\blk00000001/sig000000cd )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b6  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b8 ),
    .Q(\blk00000001/sig000000ce )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b5  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b9 ),
    .Q(\blk00000001/sig000000cf )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b4  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ba ),
    .Q(\blk00000001/sig000000d0 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b3  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000bb ),
    .Q(\blk00000001/sig000000d1 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b2  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000bc ),
    .Q(\blk00000001/sig000000d2 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b1  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000a7 ),
    .Q(\blk00000001/sig000000bd )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000b0  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000a8 ),
    .Q(\blk00000001/sig000000be )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000af  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000a9 ),
    .Q(\blk00000001/sig000000bf )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ae  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000aa ),
    .Q(\blk00000001/sig000000c0 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ad  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ab ),
    .Q(\blk00000001/sig000000c1 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ac  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ac ),
    .Q(\blk00000001/sig000000c2 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000ab  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ad ),
    .Q(\blk00000001/sig000000c3 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000aa  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000ae ),
    .Q(\blk00000001/sig000000c4 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a9  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000af ),
    .Q(\blk00000001/sig000000c5 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a8  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b0 ),
    .Q(\blk00000001/sig000000c6 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a7  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000b1 ),
    .Q(\blk00000001/sig000000c7 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a6  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000033 ),
    .Q(\blk00000001/sig000000d5 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a5  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000034 ),
    .Q(\blk00000001/sig000000d6 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a4  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig000000d4 ),
    .Q(\blk00000001/sig00000092 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a3  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000093 ),
    .Q(\blk00000001/sig0000009d )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a2  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000094 ),
    .Q(\blk00000001/sig0000009e )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a1  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000095 ),
    .Q(\blk00000001/sig0000009f )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk000000a0  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000096 ),
    .Q(\blk00000001/sig000000a0 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000009f  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000097 ),
    .Q(\blk00000001/sig000000a1 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000009e  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000098 ),
    .Q(\blk00000001/sig000000a2 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000009d  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000099 ),
    .Q(\blk00000001/sig000000a3 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000009c  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000009a ),
    .Q(\blk00000001/sig000000a4 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000009b  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000009b ),
    .Q(\blk00000001/sig000000a5 )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000009a  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000009c ),
    .Q(\blk00000001/sig000000a6 )
  );
  MUXCY   \blk00000001/blk00000099  (
    .CI(\blk00000001/sig00000014 ),
    .DI(\blk00000001/sig00000092 ),
    .S(\blk00000001/sig000000f2 ),
    .O(\blk00000001/sig00000064 )
  );
  XORCY   \blk00000001/blk00000098  (
    .CI(\blk00000001/sig00000014 ),
    .LI(\blk00000001/sig000000f2 ),
    .O(\blk00000001/sig00000071 )
  );
  MUXCY   \blk00000001/blk00000097  (
    .CI(\blk00000001/sig00000064 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000088 ),
    .O(\blk00000001/sig00000063 )
  );
  XORCY   \blk00000001/blk00000096  (
    .CI(\blk00000001/sig00000064 ),
    .LI(\blk00000001/sig00000088 ),
    .O(\blk00000001/sig00000072 )
  );
  MUXCY   \blk00000001/blk00000095  (
    .CI(\blk00000001/sig00000063 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000089 ),
    .O(\blk00000001/sig00000062 )
  );
  XORCY   \blk00000001/blk00000094  (
    .CI(\blk00000001/sig00000063 ),
    .LI(\blk00000001/sig00000089 ),
    .O(\blk00000001/sig00000073 )
  );
  MUXCY   \blk00000001/blk00000093  (
    .CI(\blk00000001/sig00000062 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000008a ),
    .O(\blk00000001/sig00000061 )
  );
  XORCY   \blk00000001/blk00000092  (
    .CI(\blk00000001/sig00000062 ),
    .LI(\blk00000001/sig0000008a ),
    .O(\blk00000001/sig00000074 )
  );
  MUXCY   \blk00000001/blk00000091  (
    .CI(\blk00000001/sig00000061 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000008b ),
    .O(\blk00000001/sig00000060 )
  );
  XORCY   \blk00000001/blk00000090  (
    .CI(\blk00000001/sig00000061 ),
    .LI(\blk00000001/sig0000008b ),
    .O(\blk00000001/sig00000075 )
  );
  MUXCY   \blk00000001/blk0000008f  (
    .CI(\blk00000001/sig00000060 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000008c ),
    .O(\blk00000001/sig0000005f )
  );
  XORCY   \blk00000001/blk0000008e  (
    .CI(\blk00000001/sig00000060 ),
    .LI(\blk00000001/sig0000008c ),
    .O(\blk00000001/sig00000076 )
  );
  MUXCY   \blk00000001/blk0000008d  (
    .CI(\blk00000001/sig0000005f ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000008d ),
    .O(\blk00000001/sig0000005e )
  );
  XORCY   \blk00000001/blk0000008c  (
    .CI(\blk00000001/sig0000005f ),
    .LI(\blk00000001/sig0000008d ),
    .O(\blk00000001/sig00000077 )
  );
  MUXCY   \blk00000001/blk0000008b  (
    .CI(\blk00000001/sig0000005e ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000008e ),
    .O(\blk00000001/sig0000005d )
  );
  XORCY   \blk00000001/blk0000008a  (
    .CI(\blk00000001/sig0000005e ),
    .LI(\blk00000001/sig0000008e ),
    .O(\blk00000001/sig00000078 )
  );
  MUXCY   \blk00000001/blk00000089  (
    .CI(\blk00000001/sig0000005d ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000008f ),
    .O(\blk00000001/sig0000005c )
  );
  XORCY   \blk00000001/blk00000088  (
    .CI(\blk00000001/sig0000005d ),
    .LI(\blk00000001/sig0000008f ),
    .O(\blk00000001/sig00000079 )
  );
  MUXCY   \blk00000001/blk00000087  (
    .CI(\blk00000001/sig0000005c ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000090 ),
    .O(\blk00000001/sig0000005b )
  );
  XORCY   \blk00000001/blk00000086  (
    .CI(\blk00000001/sig0000005c ),
    .LI(\blk00000001/sig00000090 ),
    .O(\blk00000001/sig0000007a )
  );
  MUXCY   \blk00000001/blk00000085  (
    .CI(\blk00000001/sig0000005b ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000091 ),
    .O(\blk00000001/sig0000005a )
  );
  XORCY   \blk00000001/blk00000084  (
    .CI(\blk00000001/sig0000005b ),
    .LI(\blk00000001/sig00000091 ),
    .O(\blk00000001/sig0000007b )
  );
  XORCY   \blk00000001/blk00000083  (
    .CI(\blk00000001/sig0000005a ),
    .LI(\blk00000001/sig000000f0 ),
    .O(\blk00000001/sig0000007c )
  );
  MUXCY   \blk00000001/blk00000082  (
    .CI(\blk00000001/sig00000014 ),
    .DI(\blk00000001/sig0000007d ),
    .S(\blk00000001/sig000000f1 ),
    .O(\blk00000001/sig00000059 )
  );
  XORCY   \blk00000001/blk00000081  (
    .CI(\blk00000001/sig00000014 ),
    .LI(\blk00000001/sig000000f1 ),
    .O(\blk00000001/sig00000065 )
  );
  MUXCY   \blk00000001/blk00000080  (
    .CI(\blk00000001/sig00000059 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000007e ),
    .O(\blk00000001/sig00000058 )
  );
  XORCY   \blk00000001/blk0000007f  (
    .CI(\blk00000001/sig00000059 ),
    .LI(\blk00000001/sig0000007e ),
    .O(\blk00000001/sig00000066 )
  );
  MUXCY   \blk00000001/blk0000007e  (
    .CI(\blk00000001/sig00000058 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig0000007f ),
    .O(\blk00000001/sig00000057 )
  );
  XORCY   \blk00000001/blk0000007d  (
    .CI(\blk00000001/sig00000058 ),
    .LI(\blk00000001/sig0000007f ),
    .O(\blk00000001/sig00000067 )
  );
  MUXCY   \blk00000001/blk0000007c  (
    .CI(\blk00000001/sig00000057 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000080 ),
    .O(\blk00000001/sig00000056 )
  );
  XORCY   \blk00000001/blk0000007b  (
    .CI(\blk00000001/sig00000057 ),
    .LI(\blk00000001/sig00000080 ),
    .O(\blk00000001/sig00000068 )
  );
  MUXCY   \blk00000001/blk0000007a  (
    .CI(\blk00000001/sig00000056 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000081 ),
    .O(\blk00000001/sig00000055 )
  );
  XORCY   \blk00000001/blk00000079  (
    .CI(\blk00000001/sig00000056 ),
    .LI(\blk00000001/sig00000081 ),
    .O(\blk00000001/sig00000069 )
  );
  MUXCY   \blk00000001/blk00000078  (
    .CI(\blk00000001/sig00000055 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000082 ),
    .O(\blk00000001/sig00000054 )
  );
  XORCY   \blk00000001/blk00000077  (
    .CI(\blk00000001/sig00000055 ),
    .LI(\blk00000001/sig00000082 ),
    .O(\blk00000001/sig0000006a )
  );
  MUXCY   \blk00000001/blk00000076  (
    .CI(\blk00000001/sig00000054 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000083 ),
    .O(\blk00000001/sig00000053 )
  );
  XORCY   \blk00000001/blk00000075  (
    .CI(\blk00000001/sig00000054 ),
    .LI(\blk00000001/sig00000083 ),
    .O(\blk00000001/sig0000006b )
  );
  MUXCY   \blk00000001/blk00000074  (
    .CI(\blk00000001/sig00000053 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000084 ),
    .O(\blk00000001/sig00000052 )
  );
  XORCY   \blk00000001/blk00000073  (
    .CI(\blk00000001/sig00000053 ),
    .LI(\blk00000001/sig00000084 ),
    .O(\blk00000001/sig0000006c )
  );
  MUXCY   \blk00000001/blk00000072  (
    .CI(\blk00000001/sig00000052 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000085 ),
    .O(\blk00000001/sig00000051 )
  );
  XORCY   \blk00000001/blk00000071  (
    .CI(\blk00000001/sig00000052 ),
    .LI(\blk00000001/sig00000085 ),
    .O(\blk00000001/sig0000006d )
  );
  MUXCY   \blk00000001/blk00000070  (
    .CI(\blk00000001/sig00000051 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000086 ),
    .O(\blk00000001/sig00000050 )
  );
  XORCY   \blk00000001/blk0000006f  (
    .CI(\blk00000001/sig00000051 ),
    .LI(\blk00000001/sig00000086 ),
    .O(\blk00000001/sig0000006e )
  );
  MUXCY   \blk00000001/blk0000006e  (
    .CI(\blk00000001/sig00000050 ),
    .DI(\blk00000001/sig00000014 ),
    .S(\blk00000001/sig00000087 ),
    .O(\blk00000001/sig0000004f )
  );
  XORCY   \blk00000001/blk0000006d  (
    .CI(\blk00000001/sig00000050 ),
    .LI(\blk00000001/sig00000087 ),
    .O(\blk00000001/sig0000006f )
  );
  XORCY   \blk00000001/blk0000006c  (
    .CI(\blk00000001/sig0000004f ),
    .LI(\blk00000001/sig000000ef ),
    .O(\blk00000001/sig00000070 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000021  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000036 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000001d )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000020  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000037 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000001e )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000001f  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000038 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000001f )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000001e  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000039 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000020 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000001d  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000003a ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000021 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000001c  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000003b ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000022 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000001b  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000003c ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000023 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000001a  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000003d ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000024 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000019  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000003e ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000025 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000018  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000003f ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000026 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000017  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000040 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000027 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000016  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000041 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000028 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000015  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000042 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000029 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000014  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000043 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000002a )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000013  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000044 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000002b )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000012  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000045 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000002c )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000011  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000046 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000002d )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000010  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000047 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000002e )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000000f  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000048 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000002f )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000000e  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig00000049 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000030 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000000d  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000004a ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000031 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000000c  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000004b ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000032 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000000b  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000004c ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000033 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk0000000a  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000004d ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000034 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000009  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000004e ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000035 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000008  (
    .C(aclk),
    .CE(aclken),
    .D(\blk00000001/sig0000001a ),
    .R(\blk00000001/sig00000011 ),
    .Q(m_axis_data_tvalid)
  );
  FDSE #(
    .INIT ( 1'b1 ))
  \blk00000001/blk00000007  (
    .C(aclk),
    .CE(\blk00000001/sig00000019 ),
    .D(\blk00000001/sig00000016 ),
    .S(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000001c )
  );
  FDSE #(
    .INIT ( 1'b1 ))
  \blk00000001/blk00000006  (
    .C(aclk),
    .CE(\blk00000001/sig00000019 ),
    .D(\blk00000001/sig00000018 ),
    .S(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig00000015 )
  );
  FDRE #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000005  (
    .C(aclk),
    .CE(\blk00000001/sig00000019 ),
    .D(\blk00000001/sig00000017 ),
    .R(\blk00000001/sig00000011 ),
    .Q(\blk00000001/sig0000001b )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000001/blk00000004  (
    .C(aclk),
    .D(\blk00000001/sig00000012 ),
    .Q(\blk00000001/sig00000011 )
  );
  GND   \blk00000001/blk00000003  (
    .G(\blk00000001/sig00000014 )
  );
  VCC   \blk00000001/blk00000002  (
    .P(\blk00000001/sig00000013 )
  );
  XORCY   \blk00000001/blk00000022/blk0000006b  (
    .CI(\blk00000001/blk00000022/sig0000016c ),
    .LI(\blk00000001/blk00000022/sig0000016d ),
    .O(\blk00000001/sig0000004d )
  );
  MUXCY   \blk00000001/blk00000022/blk0000006a  (
    .CI(\blk00000001/blk00000022/sig0000016c ),
    .DI(\blk00000001/sig00000034 ),
    .S(\blk00000001/blk00000022/sig0000016d ),
    .O(\blk00000001/sig0000004e )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000069  (
    .I0(\blk00000001/sig00000034 ),
    .I1(\blk00000001/sig00000014 ),
    .O(\blk00000001/blk00000022/sig0000016d )
  );
  XORCY   \blk00000001/blk00000022/blk00000068  (
    .CI(\blk00000001/blk00000022/sig0000016a ),
    .LI(\blk00000001/blk00000022/sig0000016b ),
    .O(\blk00000001/sig0000004c )
  );
  MUXCY   \blk00000001/blk00000022/blk00000067  (
    .CI(\blk00000001/blk00000022/sig0000016a ),
    .DI(\blk00000001/sig00000033 ),
    .S(\blk00000001/blk00000022/sig0000016b ),
    .O(\blk00000001/blk00000022/sig0000016c )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000066  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig00000033 ),
    .O(\blk00000001/blk00000022/sig0000016b )
  );
  XORCY   \blk00000001/blk00000022/blk00000065  (
    .CI(\blk00000001/blk00000022/sig00000168 ),
    .LI(\blk00000001/blk00000022/sig00000169 ),
    .O(\blk00000001/sig0000004b )
  );
  MUXCY   \blk00000001/blk00000022/blk00000064  (
    .CI(\blk00000001/blk00000022/sig00000168 ),
    .DI(\blk00000001/sig00000032 ),
    .S(\blk00000001/blk00000022/sig00000169 ),
    .O(\blk00000001/blk00000022/sig0000016a )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000063  (
    .I0(\blk00000001/sig00000032 ),
    .I1(\blk00000001/sig00000014 ),
    .O(\blk00000001/blk00000022/sig00000169 )
  );
  XORCY   \blk00000001/blk00000022/blk00000062  (
    .CI(\blk00000001/blk00000022/sig00000166 ),
    .LI(\blk00000001/blk00000022/sig00000167 ),
    .O(\blk00000001/sig0000004a )
  );
  MUXCY   \blk00000001/blk00000022/blk00000061  (
    .CI(\blk00000001/blk00000022/sig00000166 ),
    .DI(\blk00000001/sig00000031 ),
    .S(\blk00000001/blk00000022/sig00000167 ),
    .O(\blk00000001/blk00000022/sig00000168 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000060  (
    .I0(\blk00000001/sig00000031 ),
    .I1(\blk00000001/sig00000014 ),
    .O(\blk00000001/blk00000022/sig00000167 )
  );
  XORCY   \blk00000001/blk00000022/blk0000005f  (
    .CI(\blk00000001/blk00000022/sig00000164 ),
    .LI(\blk00000001/blk00000022/sig00000165 ),
    .O(\blk00000001/sig00000049 )
  );
  MUXCY   \blk00000001/blk00000022/blk0000005e  (
    .CI(\blk00000001/blk00000022/sig00000164 ),
    .DI(\blk00000001/sig00000030 ),
    .S(\blk00000001/blk00000022/sig00000165 ),
    .O(\blk00000001/blk00000022/sig00000166 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000005d  (
    .I0(\blk00000001/sig00000030 ),
    .I1(\blk00000001/sig00000014 ),
    .O(\blk00000001/blk00000022/sig00000165 )
  );
  XORCY   \blk00000001/blk00000022/blk0000005c  (
    .CI(\blk00000001/blk00000022/sig00000162 ),
    .LI(\blk00000001/blk00000022/sig00000163 ),
    .O(\blk00000001/sig00000048 )
  );
  MUXCY   \blk00000001/blk00000022/blk0000005b  (
    .CI(\blk00000001/blk00000022/sig00000162 ),
    .DI(\blk00000001/sig0000002f ),
    .S(\blk00000001/blk00000022/sig00000163 ),
    .O(\blk00000001/blk00000022/sig00000164 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000005a  (
    .I0(\blk00000001/sig0000002f ),
    .I1(\blk00000001/sig00000014 ),
    .O(\blk00000001/blk00000022/sig00000163 )
  );
  XORCY   \blk00000001/blk00000022/blk00000059  (
    .CI(\blk00000001/blk00000022/sig00000160 ),
    .LI(\blk00000001/blk00000022/sig00000161 ),
    .O(\blk00000001/sig00000047 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000058  (
    .CI(\blk00000001/blk00000022/sig00000160 ),
    .DI(\blk00000001/sig0000002e ),
    .S(\blk00000001/blk00000022/sig00000161 ),
    .O(\blk00000001/blk00000022/sig00000162 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000057  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig0000002e ),
    .O(\blk00000001/blk00000022/sig00000161 )
  );
  XORCY   \blk00000001/blk00000022/blk00000056  (
    .CI(\blk00000001/blk00000022/sig0000015e ),
    .LI(\blk00000001/blk00000022/sig0000015f ),
    .O(\blk00000001/sig00000046 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000055  (
    .CI(\blk00000001/blk00000022/sig0000015e ),
    .DI(\blk00000001/sig0000002d ),
    .S(\blk00000001/blk00000022/sig0000015f ),
    .O(\blk00000001/blk00000022/sig00000160 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000054  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig0000002d ),
    .O(\blk00000001/blk00000022/sig0000015f )
  );
  XORCY   \blk00000001/blk00000022/blk00000053  (
    .CI(\blk00000001/blk00000022/sig0000015c ),
    .LI(\blk00000001/blk00000022/sig0000015d ),
    .O(\blk00000001/sig00000045 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000052  (
    .CI(\blk00000001/blk00000022/sig0000015c ),
    .DI(\blk00000001/sig0000002c ),
    .S(\blk00000001/blk00000022/sig0000015d ),
    .O(\blk00000001/blk00000022/sig0000015e )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000051  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig0000002c ),
    .O(\blk00000001/blk00000022/sig0000015d )
  );
  XORCY   \blk00000001/blk00000022/blk00000050  (
    .CI(\blk00000001/blk00000022/sig0000015a ),
    .LI(\blk00000001/blk00000022/sig0000015b ),
    .O(\blk00000001/sig00000044 )
  );
  MUXCY   \blk00000001/blk00000022/blk0000004f  (
    .CI(\blk00000001/blk00000022/sig0000015a ),
    .DI(\blk00000001/sig0000002b ),
    .S(\blk00000001/blk00000022/sig0000015b ),
    .O(\blk00000001/blk00000022/sig0000015c )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000004e  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig0000002b ),
    .O(\blk00000001/blk00000022/sig0000015b )
  );
  XORCY   \blk00000001/blk00000022/blk0000004d  (
    .CI(\blk00000001/blk00000022/sig00000158 ),
    .LI(\blk00000001/blk00000022/sig00000159 ),
    .O(\blk00000001/sig00000043 )
  );
  MUXCY   \blk00000001/blk00000022/blk0000004c  (
    .CI(\blk00000001/blk00000022/sig00000158 ),
    .DI(\blk00000001/sig0000002a ),
    .S(\blk00000001/blk00000022/sig00000159 ),
    .O(\blk00000001/blk00000022/sig0000015a )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000004b  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig0000002a ),
    .O(\blk00000001/blk00000022/sig00000159 )
  );
  XORCY   \blk00000001/blk00000022/blk0000004a  (
    .CI(\blk00000001/blk00000022/sig00000156 ),
    .LI(\blk00000001/blk00000022/sig00000157 ),
    .O(\blk00000001/sig00000042 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000049  (
    .CI(\blk00000001/blk00000022/sig00000156 ),
    .DI(\blk00000001/sig00000029 ),
    .S(\blk00000001/blk00000022/sig00000157 ),
    .O(\blk00000001/blk00000022/sig00000158 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000048  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000029 ),
    .O(\blk00000001/blk00000022/sig00000157 )
  );
  XORCY   \blk00000001/blk00000022/blk00000047  (
    .CI(\blk00000001/blk00000022/sig00000154 ),
    .LI(\blk00000001/blk00000022/sig00000155 ),
    .O(\blk00000001/sig00000041 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000046  (
    .CI(\blk00000001/blk00000022/sig00000154 ),
    .DI(\blk00000001/sig00000028 ),
    .S(\blk00000001/blk00000022/sig00000155 ),
    .O(\blk00000001/blk00000022/sig00000156 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000045  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000028 ),
    .O(\blk00000001/blk00000022/sig00000155 )
  );
  XORCY   \blk00000001/blk00000022/blk00000044  (
    .CI(\blk00000001/blk00000022/sig00000152 ),
    .LI(\blk00000001/blk00000022/sig00000153 ),
    .O(\blk00000001/sig00000040 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000043  (
    .CI(\blk00000001/blk00000022/sig00000152 ),
    .DI(\blk00000001/sig00000027 ),
    .S(\blk00000001/blk00000022/sig00000153 ),
    .O(\blk00000001/blk00000022/sig00000154 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000042  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000027 ),
    .O(\blk00000001/blk00000022/sig00000153 )
  );
  XORCY   \blk00000001/blk00000022/blk00000041  (
    .CI(\blk00000001/blk00000022/sig00000150 ),
    .LI(\blk00000001/blk00000022/sig00000151 ),
    .O(\blk00000001/sig0000003f )
  );
  MUXCY   \blk00000001/blk00000022/blk00000040  (
    .CI(\blk00000001/blk00000022/sig00000150 ),
    .DI(\blk00000001/sig00000026 ),
    .S(\blk00000001/blk00000022/sig00000151 ),
    .O(\blk00000001/blk00000022/sig00000152 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000003f  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000026 ),
    .O(\blk00000001/blk00000022/sig00000151 )
  );
  XORCY   \blk00000001/blk00000022/blk0000003e  (
    .CI(\blk00000001/blk00000022/sig0000014e ),
    .LI(\blk00000001/blk00000022/sig0000014f ),
    .O(\blk00000001/sig0000003e )
  );
  MUXCY   \blk00000001/blk00000022/blk0000003d  (
    .CI(\blk00000001/blk00000022/sig0000014e ),
    .DI(\blk00000001/sig00000025 ),
    .S(\blk00000001/blk00000022/sig0000014f ),
    .O(\blk00000001/blk00000022/sig00000150 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000003c  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig00000025 ),
    .O(\blk00000001/blk00000022/sig0000014f )
  );
  XORCY   \blk00000001/blk00000022/blk0000003b  (
    .CI(\blk00000001/blk00000022/sig0000014c ),
    .LI(\blk00000001/blk00000022/sig0000014d ),
    .O(\blk00000001/sig0000003d )
  );
  MUXCY   \blk00000001/blk00000022/blk0000003a  (
    .CI(\blk00000001/blk00000022/sig0000014c ),
    .DI(\blk00000001/sig00000024 ),
    .S(\blk00000001/blk00000022/sig0000014d ),
    .O(\blk00000001/blk00000022/sig0000014e )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000039  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000024 ),
    .O(\blk00000001/blk00000022/sig0000014d )
  );
  XORCY   \blk00000001/blk00000022/blk00000038  (
    .CI(\blk00000001/blk00000022/sig0000014a ),
    .LI(\blk00000001/blk00000022/sig0000014b ),
    .O(\blk00000001/sig0000003c )
  );
  MUXCY   \blk00000001/blk00000022/blk00000037  (
    .CI(\blk00000001/blk00000022/sig0000014a ),
    .DI(\blk00000001/sig00000023 ),
    .S(\blk00000001/blk00000022/sig0000014b ),
    .O(\blk00000001/blk00000022/sig0000014c )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000036  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000023 ),
    .O(\blk00000001/blk00000022/sig0000014b )
  );
  XORCY   \blk00000001/blk00000022/blk00000035  (
    .CI(\blk00000001/blk00000022/sig00000148 ),
    .LI(\blk00000001/blk00000022/sig00000149 ),
    .O(\blk00000001/sig0000003b )
  );
  MUXCY   \blk00000001/blk00000022/blk00000034  (
    .CI(\blk00000001/blk00000022/sig00000148 ),
    .DI(\blk00000001/sig00000022 ),
    .S(\blk00000001/blk00000022/sig00000149 ),
    .O(\blk00000001/blk00000022/sig0000014a )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000033  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000022 ),
    .O(\blk00000001/blk00000022/sig00000149 )
  );
  XORCY   \blk00000001/blk00000022/blk00000032  (
    .CI(\blk00000001/blk00000022/sig00000146 ),
    .LI(\blk00000001/blk00000022/sig00000147 ),
    .O(\blk00000001/sig0000003a )
  );
  MUXCY   \blk00000001/blk00000022/blk00000031  (
    .CI(\blk00000001/blk00000022/sig00000146 ),
    .DI(\blk00000001/sig00000021 ),
    .S(\blk00000001/blk00000022/sig00000147 ),
    .O(\blk00000001/blk00000022/sig00000148 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000030  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig00000021 ),
    .O(\blk00000001/blk00000022/sig00000147 )
  );
  XORCY   \blk00000001/blk00000022/blk0000002f  (
    .CI(\blk00000001/blk00000022/sig00000144 ),
    .LI(\blk00000001/blk00000022/sig00000145 ),
    .O(\blk00000001/sig00000039 )
  );
  MUXCY   \blk00000001/blk00000022/blk0000002e  (
    .CI(\blk00000001/blk00000022/sig00000144 ),
    .DI(\blk00000001/sig00000020 ),
    .S(\blk00000001/blk00000022/sig00000145 ),
    .O(\blk00000001/blk00000022/sig00000146 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000002d  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig00000020 ),
    .O(\blk00000001/blk00000022/sig00000145 )
  );
  XORCY   \blk00000001/blk00000022/blk0000002c  (
    .CI(\blk00000001/blk00000022/sig00000142 ),
    .LI(\blk00000001/blk00000022/sig00000143 ),
    .O(\blk00000001/sig00000038 )
  );
  MUXCY   \blk00000001/blk00000022/blk0000002b  (
    .CI(\blk00000001/blk00000022/sig00000142 ),
    .DI(\blk00000001/sig0000001f ),
    .S(\blk00000001/blk00000022/sig00000143 ),
    .O(\blk00000001/blk00000022/sig00000144 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk0000002a  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig0000001f ),
    .O(\blk00000001/blk00000022/sig00000143 )
  );
  XORCY   \blk00000001/blk00000022/blk00000029  (
    .CI(\blk00000001/blk00000022/sig00000140 ),
    .LI(\blk00000001/blk00000022/sig00000141 ),
    .O(\blk00000001/sig00000037 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000028  (
    .CI(\blk00000001/blk00000022/sig00000140 ),
    .DI(\blk00000001/sig0000001e ),
    .S(\blk00000001/blk00000022/sig00000141 ),
    .O(\blk00000001/blk00000022/sig00000142 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000027  (
    .I0(\blk00000001/sig00000013 ),
    .I1(\blk00000001/sig0000001e ),
    .O(\blk00000001/blk00000022/sig00000141 )
  );
  XORCY   \blk00000001/blk00000022/blk00000026  (
    .CI(\blk00000001/blk00000022/sig0000013e ),
    .LI(\blk00000001/blk00000022/sig0000013f ),
    .O(\blk00000001/sig00000036 )
  );
  MUXCY   \blk00000001/blk00000022/blk00000025  (
    .CI(\blk00000001/blk00000022/sig0000013e ),
    .DI(\blk00000001/sig0000001d ),
    .S(\blk00000001/blk00000022/sig0000013f ),
    .O(\blk00000001/blk00000022/sig00000140 )
  );
  LUT2 #(
    .INIT ( 4'h6 ))
  \blk00000001/blk00000022/blk00000024  (
    .I0(\blk00000001/sig00000014 ),
    .I1(\blk00000001/sig0000001d ),
    .O(\blk00000001/blk00000022/sig0000013f )
  );
  GND   \blk00000001/blk00000022/blk00000023  (
    .G(\blk00000001/blk00000022/sig0000013e )
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
